#!/bin/sh

cd $(dirname "$0")

id=$(basename $(pwd))

if [ ! "$@" ]
then
	pherror 'Post failed: No URL specified.'
	phitem 1 'Return to thread' "$CHAN_ROOT/$id"
fi

if [ ! -e ../params.sh ]
then
	exit 1
fi

. ../params.sh

if [ "$MAX_POSTS" -gt 0 ] && [ $(ls [0-9]* 2>/dev/null | wc -l) -ge "$MAX_POSTS" ]
then
	pherror "Post failed: Post limit reached ($MAX_POSTS)"
	phitem 1 'Return to thread' "$CHAN_ROOT/$id"
	exit 1
fi

if [ "$MAX_UPLOAD" -le 0 ]
then
	pherror 'Uploads are disabled.'
	phitem 1 'Return to thread' "$CHAN_ROOT/$id"
	exit 1
fi

stamp=$(date +%s)

if [ -e ../posts ]
then
	no=$(cat ../posts)
else
	no=0
fi
no=$(($no + 1))

post="$stamp"_"$no"

url=$(echo "$@" | cut -c1-$MAX_POSTLEN)

if ! echo "$url" | grep -q '://'
then
	pherror "Invalid URL: $url"
	phinfo 'You must include the protocol (http://, gopher://, etc.)'
	phitem 1 'Return to thread'
	exit 1
fi

proto=$(echo "$url" | sed -r 's/^([^:]+):\/\/.+$/\1/')
uri=$(echo "$url" | sed -r 's/^[^:]+:\/\/(.+)$/\1/')

if echo "$proto" | grep -q ' '
then
	dis=$(echo "$proto" | rev | cut -f 2- -d ' ' | rev | cut -c1-70)
	proto=$(echo "$proto" | rev | cut -f 1 -d ' ' | rev)
else
	dis=$(echo "$url" | cut -c1-70)
fi

if [ ! "$proto" ]
then
	pherror "Invalid URL: $url"
	phitem 1 'Return to thread' "$CHAN_ROOT/$id"
	exit 1
fi

res=$(echo "$uri" | rev | cut -d / -f 1 | rev)
ext=$(echo "$res" | rev | cut -d . -f 1 | rev)

if [ "$ext" = "$res" ]
then
	ext=""
fi

size=$(curl -L -sI "$proto://$uri" | grep "Content-Length" | awk '{print $2}' | tr -d '\r')

if [ ! "$size" ]
then
	size=0
fi

if [ "$size" -gt "$MAX_UPLOAD" ]
then
	pherror "File too large ($size/$MAX_UPLOAD bytes)"
	phitem 1 'Return to thread' "$CHAN_ROOT/$id"
	exit 1
fi

cd ..

if [ ! "$ext" ]
then
	fname="file_$post"
else
	fname="file_$post.$ext"
fi

curl -L "$proto://$uri" > "$fname" -m 3 --limit-rate $MAX_UPLOAD
err=$?

size=$(stat --printf "%s" "$fname")

if [ ! "$size" ]
then
	size=0
fi

if [ "$size" -gt "$MAX_UPLOAD" ] || [ $err -ne 0 ]
then
	pherror 'Failed to fetch file (too large or timed out).'
	phitem 1 'Return to thread' "$CHAN_ROOT/$id"
	rm -f "$fname"
	exit 1
fi

mime=$(file -i -b "$fname" | cut -d ';' -f 1)

if [ "$MAX_IMAGE" ] && echo "$mime" | grep -q 'image/'
then
	maxw=$(echo $MAX_IMAGE | cut -f 1 -d 'x')
	maxh=$(echo $MAX_IMAGE | cut -f 2 -d 'x')
	dims=$(identify "$fname" | head -n 1 | cut -f 3 -d ' ')
	imgw=$(echo $dims | cut -f 1 -d 'x')
	imgh=$(echo $dims | cut -f 2 -d 'x')

	if [ $imgw -gt $maxw ] || [ $imgh -gt $maxh ]
	then
		pherror "Image too large ($imgw x $imgh, max $maxw x $maxh)"
		phitem 1 'Return to thread' "$CHAN_ROOT/$id"
		rm -f "$fname"
		exit 1
	fi
fi

case "$mime" in
	"image/png")	type='p';;
	"image/jpeg")	type='I';;
	"image/gif")	type='g';;
	"audio/wav")	type='s';;
	"text/html")	type='h';;
	"text/"*)	type='0';;
	"video/"*)	type=';';;
	*)		type='9';;
esac

if [ ! "$ext" ]
then
	case "$mime" in
		"video/webm")	ext="webm";;
		"image/png")	ext="png";;
		"image/jpeg")	ext="jpg";;
		"text/html")	ext="html";;
		"text/x-c")	ext="c";;
		*)		ext=""
	esac
	
	if [ "$ext" = '' ]
	then
		mv "$fname" "$fname.$ext"
		fname="$fname.$ext"
	fi
fi

mv "$fname" $id/

cd $id

# quotes
targetno=$(echo "$dis" | sed -r 's/>>([0-9]+) ?.*/\1/')
if echo "$dis" | grep -q '^>>.*'
then
	target=$(find .. -name "[0-9]*_$targetno" | head -n 1)

	if [ ! -e "$target" ]
	then
		pherror "Post #$targetno does not exist."
		phitem 1 'Return to thread' "$CHAN_ROOT/$id"
		exit 1
	fi

	thread=$(echo "$target" | cut -d / -f 2)

	if [ "$thread" = "$id" ]
	then
		echo "#$targetno said:" >> $post
	else
		echo "1#$targetno said:	$CHAN_ROOT/$thread	$SERVER_HOST	$SERVER_PORT" >> $post
	fi

	saveifs="$IFS"
	IFS=''
	cat $target | while read -r line
	do
		if echo "$line" | grep -v -q "	"
		then
			echo "$line" | fmt -66 -s | fold -w 66 | while read -r fmtline
			do
				echo "  >$fmtline" >> $post
			done
		else
			kind=$(echo "$line" | head -c 1)
			rest=$(echo "$line" | tail -c +2)
			echo "$kind  >$rest" >> $post
		fi
	done
	IFS="$saveifs"

	dis=$(echo "$dis" | sed -r 's/>>[0-9]+ ?(.*)/\1/' | sed 's/	/    /g')
fi

if [ "$dis" = '' ]
then
	dis="$proto://$uri"
fi

printf "$type$dis	$CHAN_ROOT/$id/$fname	$SERVER_HOST	$SERVER_PORT\r\n" >> $post

if [ -e $post ]
then
	phinfo 'Post successful!'

	echo $no > ../posts
	../updatepostcache $id $post >> postcache
else
	pherror 'Could not post.'
fi

phitem 1 'Return to thread' "$CHAN_ROOT/$id"
