#!/bin/bash

cd "${0%/*}"

if [ "${#@}" -lt 1 ]
then
	exit
fi

if [ ! -e ../params.sh ]
then
	exit
fi

source ../params.sh

if [[ "$MAX_POSTS" -gt 0 && $(ls [0-9]* 2>/dev/null | wc -l) -ge $MAX_POSTS ]]
then
	printf "3Post failed.	fake	(NULL)	0\r\n"
	printf "iPost limit reached ($MAX_POSTS)	fake	(NULL)	0\r\n"
	printf "1Return to thread	$CHAN_ROOT/$id	$SERVER_HOST	$SERVER_PORT\r\n"
	exit 1
fi

if [ ! $MAX_UPLOAD -gt 0 ]
then
	printf "3Uploads are disabled	fake	(NULL)	0\r\n"
	printf "1Return to thread	$CHAN_ROOT/$id	$SERVER_HOST	$SERVER_PORT\r\n"
	exit 1
fi

id=$(basename $(pwd))

stamp=$(date +%s)

if [[ -e ../posts ]]
then
	no=$(cat ../posts)
else
	no=0
fi
no=$(($no + 1))

post="$stamp"_"$no"

data="$1"
disp="${@:2}"

if [ ! "$disp" ]
then
	disp="untitled"
fi

disp=$(echo "$disp" | cut -c1-70)

size="${#data}"

if [ ! "$size" ]
then
	size=0
fi

if [ $size -lt 1 ]
then
	printf "3Unable to retrieve file size	fake	(NULL)	0\r\n"
	printf "1Return to thread	$CHAN_ROOT/$id	$SERVER_HOST	$SERVER_PORT\r\n"
	exit 1
fi

if [ $size -gt $MAX_UPLOAD ]
then
	printf "3File too large (max $MAX_UPLOAD bytes)	fake	(NULL)	0\r\n"
	printf "1Return to thread	$CHAN_ROOT/$id	$SERVER_HOST	$SERVER_PORT\r\n"
	exit 1
fi

cd ..

fname="file_$post"

echo "$data" | base64 -d > "$fname"

mime=$(file -i -b "$fname")
mime="${mime%;*}"

if [[ "$MAX_IMAGE" && "$mime" == "image/"* ]]
then
	maxw=$(echo $MAX_IMAGE | cut -f 1 -d 'x')
	maxh=$(echo $MAX_IMAGE | cut -f 2 -d 'x')
	dims=$(identify "$fname" | head -n 1 | cut -f 3 -d ' ')
	imgw=$(echo $dims | cut -f 1 -d 'x')
	imgh=$(echo $dims | cut -f 2 -d 'x')

	if [[ $imgw -gt $maxw || $imgh -gt $maxh ]]
	then
		printf "3Image too large ($imgw x $imgh, max $maxw x $maxh)	fake	(NULL)	0\r\n"
		printf "1Return to thread	$CHAN_ROOT/$id	$SERVER_HOST	$SERVER_PORT\r\n"
		rm -f "$fname"
		exit 1
	fi
fi

case "$mime" in
	"image/png")	type='p';;
	"image/jpeg")	type='I';;
	"image/gif")	type='g';;
	"audio/wav")	type='s';;
	"text/html")	type='h';;
	"text/"*)	type='0';;
	"video/"*)	type=';';;
	*)		type='9';;
esac

case "$mime" in
	"video/webm")	ext="webm";;
	"image/png")	ext="png";;
	"image/jpeg")	ext="jpg";;
	"text/html")	ext="html";;
	"text/x-c")	ext="c";;
	*)		ext="";;
esac

if [[ "$ext" != "" ]]
then
	mv "$fname" "$fname.$ext"
	fname="$fname.$ext"
fi

mv "$fname" $id/

cd $id

# quotes
targetno=$(echo "$disp" | sed -r 's/>>([0-9]+) ?.*/\1/')
if  [[ "$disp" == ">>"* && "$targetno" -gt 0 ]]
then
	target=$(ls ../[0-9]*_*/[0-9]*_$targetno 2>/dev/null | head -n 1)
	target="${target#../}"

	if [[ ! "$target" ]]
	then
		printf "3Post #$targetno does not exist!	fake	(NULL)	0\r\n"
		printf "1Return to thread	$CHAN_ROOT/$id	$SERVER_HOST	$SERVER_PORT\r\n"
		exit 1
	fi

	thread="${target%/*}"

	if [[ "$thread" == "$id" ]]
	then
		echo "#$targetno said:" >> $post
	else
		echo "1$targetno said:	$CHAN_ROOT/$thread	$SERVER_HOST	$SERVER_PORT" >> $post
	fi

	saveifs="$IFS"
	IFS=''
	while read -r line
	do
		if echo "$line" | grep -q -v "	"
		then
			while read -r fmtline
			do
				echo "  >$fmtline" >> $post
			done < <(echo "$line" | fmt -66 -s | fold -w 66)
		else
			kind=$(echo "$line" | head -c 1)
			rest=$(echo "$line" | tail -c +2)
			echo "$kind  >$rest" >> $post
		fi
	done < ../$target
	IFS="$saveifs"

	disp=$(echo "$disp" | sed -r 's/>>[0-9]+ ?(.*)/\1/')

	if [[ ! "$disp" ]]
	then
		disp="untitled"
	fi
fi

printf "$type$disp	$CHAN_ROOT/$id/$fname	$SERVER_HOST	$SERVER_PORT\r\n" >> $post

if [ -e $post ]
then
	printf "iPost successful!	fake	(NULL)	0\r\n"

	echo $no > ../posts
	../updatepostcache $id $post >> postcache
else
	printf "3Could not post.	fake	(NULL)	0\r\n"
fi

printf "1Return to thread	$CHAN_ROOT/$id	$SERVER_HOST	$SERVER_PORT\r\n"
